/**
 * Copyright Hannes Markschlaeger
 * File created 13.03.2012
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version. 
 */
package org.openuat.android.service.interfaces;

import org.openuat.android.service.interfaces.IReceiverCallback;

/**
 * This interface enables communication with a remote object. 
 * If you register a receive-callback the receive method of this 
 * interface won't work - furthermore using it may cause unpredictable behavior.
 * 
 * TODO: reference to maximum chunk size
 * @author Hannes Markschläger
 * 
 */
interface ISecureChannel {
    /** 
    * Send data to other device
    *  
    * @param data The byte-array to send
    * @return True if sending had been successful, false otherwise.
    */
    boolean send(in byte[] data);
    
    /** 
    * Blocking receive of data from the other device. 
    * Do not use this method if you registered a receive-callback!
    * 
    * @return a byte-array received recently.
    */
    byte[] receive();
     
    /**
    * Register for asynchronously receiving data from the other device. 
    * As long as a callback is registered do not use the receive-method!
    *
    * @param receiver The interface to be called when data is received.
    */
    void registerReceiveHandler(IReceiverCallback receiver);
    
    /**
    * Unregister a receive-callback. 
    * When all callbacks are unregistered you can use the receive-method again.
    *
    * @param receiver The interface to unregister.
    */
    void unregisterReceiveHandler(IReceiverCallback receiver);
}
